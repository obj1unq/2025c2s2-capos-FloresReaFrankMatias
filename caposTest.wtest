import capos.*
  
describe "Ejercicio 1" {
  test "Rolando encuentra la espada el libro y el collar" {
    rolando.encontrar(espadaDelDestino)
    assert.that(rolando.tiene(espadaDelDestino))
    rolando.encontrar(libroDeHechizos)
    assert.that(rolando.tiene(libroDeHechizos))
    rolando.encontrar(collarDivino)
    assert.notThat(rolando.tiene(collarDivino))
    assert.equals(#{espadaDelDestino, libroDeHechizos}, rolando.mochila())
  }

  test "ej 1.2: Rolando encuentra la espada y libro y llega al castillo,despues encuentra el collar y llega al castillo" {
    rolando.encontrar(espadaDelDestino)
    assert.that(rolando.tiene(espadaDelDestino))
    rolando.encontrar(libroDeHechizos)
    assert.that(rolando.tiene(libroDeHechizos))
    rolando.llegarAHogar()

    rolando.encontrar(collarDivino)
    assert.that(rolando.tiene(collarDivino))
    rolando.llegarAHogar()
    assert.equals(#{espadaDelDestino, libroDeHechizos, collarDivino}, castillo.artefactos())
  }
  test "Ejer 1.3:En el  castillo estan el collar y la espada y rolando la armadura, en posesiones tiene que tenes los 3 items" {
    rolando.encontrar(collarDivino)
    rolando.encontrar(espadaDelDestino)
    assert.equals(#{espadaDelDestino, collarDivino}, rolando.mochila())
    rolando.llegarAHogar()
    rolando.encontrar(armaduraDeAceroValyrio)
    assert.equals(#{espadaDelDestino, collarDivino,armaduraDeAceroValyrio}, rolando.posesiones())
    assert.notThat(rolando.tiene(libroDeHechizos))
    assert.notEquals(#{libroDeHechizos},rolando.posesiones())
  }

  test "Ejer 1.4: Rolando prmero se encuentra con 3 items y guarda 2,llega al castillo,despues se encuentra con otros 2 items, en el historial debe tener 5 art" {
    rolando.encontrar(espadaDelDestino)
    rolando.encontrar(libroDeHechizos)
    rolando.encontrar(collarDivino)
    
    assert.equals(#{espadaDelDestino, libroDeHechizos}, rolando.mochila())
    rolando.llegarAHogar()
    
    rolando.encontrar(armaduraDeAceroValyrio)
    rolando.encontrar(collarDivino)

    assert.equals([espadaDelDestino,libroDeHechizos,collarDivino,  armaduraDeAceroValyrio,collarDivino], rolando.historialDeArtefactos())
  }
}


describe "Test del punto  2" {
  
  test "Ejer 2.1: pB =5, capMochila = 3, con espada con aporte 5,armadura con aporte 6 y tiene 3 batallas " {
    rolando.capacidadMochila(3)
    rolando.encontrar(espadaDelDestino)
    assert.equals(5, espadaDelDestino.aporteDePoderA(rolando))

    rolando.encontrar(armaduraDeAceroValyrio)
    assert.equals(6, armaduraDeAceroValyrio.aporteDePoderA(rolando))
    
    rolando.encontrar(collarDivino)
    assert.equals(3, collarDivino.aporteDePoderA(rolando))

    assert.equals([espadaDelDestino, armaduraDeAceroValyrio, collarDivino], rolando.mochila())

    rolando.lucharEnBatalla()
    assert.equals(6, rolando.poderBase())
    assert.equals(3, espadaDelDestino.aporteDePoderA(rolando) )
    assert.equals(6, armaduraDeAceroValyrio.aporteDePoderA(rolando) )
    assert.equals(3, collarDivino.aporteDePoderA(rolando) )

    rolando.lucharEnBatalla()
    assert.equals(7, rolando.poderBase())
    assert.equals(3.5, espadaDelDestino.aporteDePoderA(rolando) )
    assert.equals(6, armaduraDeAceroValyrio.aporteDePoderA(rolando) )
    assert.equals(5, collarDivino.aporteDePoderA(rolando) )
  
    rolando.lucharEnBatalla()
    assert.equals(8, rolando.poderBase())
    assert.equals(4, espadaDelDestino.aporteDePoderA(rolando) )
    assert.equals(6, armaduraDeAceroValyrio.aporteDePoderA(rolando) )
    assert.equals(6, collarDivino.aporteDePoderA(rolando) )
  }
}

describe "Ejercicio 2.2" {
  
  method initialize(){
    rolando.poderBase(5)
    rolando.capacidadMochila(3)
    rolando.encontrar(espadaDelDestino)
    rolando.encontrar(armaduraDeAceroValyrio)
    rolando.encontrar(collarDivino)
    rolando.llegarAHogar()
    rolando.encontrar(libroDeHechizos)
  }
  test "Rolando con 5 de poderBase, en posesiones tiene los 4 artefactos y lucha en batalla 3 veces" {
    assert.equals([libroDeHechizos],rolando.mochila())
    assert.equals(4, libroDeHechizos.aporteDePoderA(rolando))
    rolando.lucharEnBatalla()
    assert.equals(6, libroDeHechizos.aporteDePoderA(rolando))    
    rolando.lucharEnBatalla()
    assert.equals(7, libroDeHechizos.aporteDePoderA(rolando))
    rolando.lucharEnBatalla()
    assert.equals(0, libroDeHechizos.aporteDePoderA(rolando))
    
  }
}

describe "test ej 2.3, 2.4 ,2.5" {
  
  test "Rolando puede conquistar el pacioDeMarmol y la torreDeMarfil" {
    rolando.poderBase(5)
    rolando.capacidadMochila(3)
    rolando.encontrar(espadaDelDestino)
    rolando.encontrar(armaduraDeAceroValyrio)
    rolando.encontrar(collarDivino)
   // assert.equals( [archibaldo,astra], enemigosVencibles)  
    assert.equals([palacioDeMarmol, torreDeMarfil],rolando.moradasConquistables())
  }

  test "Rolando no es poderoso" {
    rolando.poderBase(5)
    rolando.capacidadMochila(3)
    rolando.encontrar(espadaDelDestino)
    rolando.encontrar(armaduraDeAceroValyrio)
    rolando.encontrar(collarDivino)
    assert.noThat( rolando.esPoderoso())

  }

  test "Rolando es poderoso" {
    rolando.poderBase(5)
    rolando.capacidadMochila(3)
    rolando.encontrar(espadaDelDestino)
    rolando.encontrar(armaduraDeAceroValyrio)
    rolando.encontrar(collarDivino)
    assert.that( rolando.esPoderoso())
  }

}

